#+TITLE: Annotation
#+DRAWERS: HIDDEN
#+OPTIONS: d:RESULTS ^:nil
#+STARTUP: hideblocks align
#+PROPERTY:  header-args :exports results :eval never-export :mkdirp yes  :var DIR=(file-name-directory buffer-file-name) 

#+BEGIN_COMMENT
The genomes table sets-up the annotation pipeline. Name is the output prefix,
Path is the path to the original fasta file relative to this README, Rename
indicates whether the fasta headers need to be renamed (0 or 1), and Filter is
the minimum contig length (0 for no filtering)
#+END_COMMENT
#+NAME: genomes
| Name  | Path                                   | Rename | Filter |
|-------+----------------------------------------+--------+--------|
| D5.v1 | genomes/raimondii.juiced_V1.0.fasta.gz |      0 |      0 |

#+BEGIN_COMMENT
The RNA table is used to specify RNA-seq libraries. Name should match an entry
in the genome table. Forward should be the path relative to this README for the
R1 file. If multiple libraries are available for a genome, then
separate the file names by a comma (no spaces). Reverse is the relative path for
the R2 file[s]. This column should be in the same order as the Forward column if
multiple libraries are given. Reverse column is left blank if the library is
single-end.
#+END_COMMENT
#+NAME: RNA
| Name  | Forward| Reverse|
||
| D5.v1 | RNA-seq/D5/LD7-D5-L1_1.fq.gz,RNA-seq/D5/LD7-D5-L2_1.fq.gz,RNA-seq/D5/LD7-D5-L3_1.fq.gz,RNA-seq/D5/LD9-D5-L1_1.fq.gz,RNA-seq/D5/LD9-D5-L2_1.fq.gz,RNA-seq/D5/LD9-D5-L3_1.fq.gz,RNA-seq/D5/LDM-D5-L1_1.fq.gz,RNA-seq/D5/LDM-D5-L2_1.fq.gz,RNA-seq/D5/LDM-D5-L2-209_L1_1.fq.gz,RNA-seq/D5/LDM-D5-L3_1.fq.gz,RNA-seq/D5/SD5-D5-S1_1.fq.gz,RNA-seq/D5/SD5-D5-S3_1.fq.gz,RNA-seq/D5/SD7-D5-S1_1.fq.gz,RNA-seq/D5/SD7-D5-S2_1.fq.gz,RNA-seq/D5/SD7-D5-S3_1.fq.gz,RNA-seq/D5/SDM-D5-S1_1.fq.gz,RNA-seq/D5/SDM-D5-S2_1.fq.gz,RNA-seq/D5/SDP9-D5-S1_1.fq.gz,RNA-seq/D5/SDP9-D5-S2_1.fq.gz,RNA-seq/D5/SDP9-D5-S3_1.fq.gz,RNA-seq/D5/SDPF-D5-S1_1.fq.gz,RNA-seq/D5/SDPF-D5-S2_1.fq.gz,RNA-seq/D5/SDPF-D5-S3_1.fq.gz | RNA-seq/D5/LD7-D5-L1_2.fq.gz,RNA-seq/D5/LD7-D5-L2_2.fq.gz,RNA-seq/D5/LD7-D5-L3_2.fq.gz,RNA-seq/D5/LD9-D5-L1_2.fq.gz,RNA-seq/D5/LD9-D5-L2_2.fq.gz,RNA-seq/D5/LD9-D5-L3_2.fq.gz,RNA-seq/D5/LDM-D5-L1_2.fq.gz,RNA-seq/D5/LDM-D5-L2-209_L1_2.fq.gz,RNA-seq/D5/LDM-D5-L2_2.fq.gz,RNA-seq/D5/LDM-D5-L3_2.fq.gz,RNA-seq/D5/SD5-D5-S1_2.fq.gz,RNA-seq/D5/SD5-D5-S3_2.fq.gz,RNA-seq/D5/SD7-D5-S1_2.fq.gz,RNA-seq/D5/SD7-D5-S2_2.fq.gz,RNA-seq/D5/SD7-D5-S3_2.fq.gz,RNA-seq/D5/SDM-D5-S1_2.fq.gz,RNA-seq/D5/SDM-D5-S2_2.fq.gz,RNA-seq/D5/SDP9-D5-S1_2.fq.gz,RNA-seq/D5/SDP9-D5-S2_2.fq.gz,RNA-seq/D5/SDP9-D5-S3_2.fq.gz,RNA-seq/D5/SDPF-D5-S1_2.fq.gz,RNA-seq/D5/SDPF-D5-S2_2.fq.gz,RNA-seq/D5/SDPF-D5-S3_2.fq.gz |


#+BEGIN_SRC sh :tangle augustus/setup.sh
cd $DIR

cp -r /usr/local/igbb/augustus-3.2.3/config/             $DIR/augustus/
ln -s /usr/local/igbb/augustus-3.2.3/bin/                $DIR/augustus/
ln -s /usr/local/igbb/augustus-3.2.3/include/            $DIR/augustus/
cp -r /usr/local/igbb/augustus-3.2.3/scripts/            $DIR/augustus/
cp    /usr/local/igbb/augustus-3.0.3/scripts/autoAug.pl  $DIR/augustus/scripts/


#+END_SRC
#+BEGIN_SRC sh :var genomes=genomes :tangle genomes/filter.sh
cd $DIR
ROOT=$(git rev-parse --show-toplevel)

PATH=$PATH:$DIR/augustus/scripts

for name in "${!genomes[@]}"; do
    readarray -t lib <<< "${genomes[$name]}"

    if [ ${lib[1]} -ne 0 ]; then
    pv "$DIR/${lib[0]}" | zcat |
      awk 'BEGIN {count=1}
            /^>/ {printf ">%s_%d\n", name, count++}
           !/^>/ {print}' name="${name}"  > "$DIR/genomes/$name.fa"
    else
        pv "$DIR/${lib[0]}" | zcat > "$DIR/genomes/$name.fa"
    fi

    mkdir $DIR/genomes/$name/

    if [ ${lib[2]} -ne 0 ]; then
        /home/maa146/bin/fasta_filter.pl "$DIR/${name}.fa" --length=${lib[2]} > "$DIR/genomes/${name}/filtered.fa"
    else
        ln -s "$DIR/genomes/$name.fa" "$DIR/genomes/$name/filtered.fa" 
    fi

    splitMfasta.pl --minsize=1000000 --outputpath="$DIR/genomes/$name/" "$DIR/genomes/$name/filtered.fa"

done

#+END_SRC

* RepeatMasker
#+HEADER: :prologue #PBS -N repeatmasker -l walltime=48:00:00
#+BEGIN_SRC sh :var libs=RNA[,0] :tangle RM/run.sh
cd $DIR
ROOT=$(git rev-parse --show-toplevel)

[ -z $name ] && exit
mkdir -p $DIR/RM/$name/$PBS_ARRAYID

ml igbb repeatmasker/4.0.7

RepeatMasker -pa $PBS_NUM_PPN -s -nolow -xsmall \
             -lib $DIR/RM/cottonRB23.04.fa \
             -no_is -frag 500000 -nocut -noisy -dir $DIR/RM/$name/$PBS_ARRAYID -html -gff \
             "$DIR/genomes/$name/filtered.split.$PBS_ARRAYID.fa"

cd $DIR/RM/$name/
tar -czf $PBS_ARRAYID.tar.gz $PBS_ARRAYID

#+END_SRC

#+BEGIN_SRC sh :tangle RM/combine.sh
cd $DIR
ROOT=$(git rev-parse --show-toplevel)
ml igbb repeatmasker/4.0.7

[ -z $name ] && exit

cat $DIR/RM/$name/*/filtered.split.*.fa.masked > $DIR/RM/$name.softmask.fa

zcat $DIR/RM/$name/*/filtered.split.*.fa.cat.gz | gzip > $DIR/RM/$name.cat.gz
ProcessRepeats -lib $DIR/RM/cottonRB23.04.fa $DIR/RM/$name.cat.gz

rmOutToGFF3.pl $DIR/RM/$name.out |
    grep -v -e "Satellite" -e ")n" -e "-rich" |
    perl -ane '$id; 
               if(!/^\#/){ 
                      @F = split(/\t/, $_); 
                      chomp $F[-1];
                      $id++; 
                      $F[-1] .= "\;ID=$id"; 
                      $_ = join("\t", @F)."\n"
               } 
               print $_' \
  > $DIR/RM/$name.gff
#+END_SRC

* BUSCO
#+HEADER: :shebang #!/bin/bash :tangle busco/run.sh :mkdirp yes
#+HEADER: :prologue #PBS -N busco -l nodes=1:ppn=12 -l walltime=192:00:00 -q q48p192h -t 1
#+BEGIN_SRC sh :var genomes=genomes[,0]
source /work/maa146/PerchGenome/analysis/annotation/bin/busco-3/bin/activate
  
ml gcc/4.9.3
ml igbb augustus/3.2.3 blast/2.7.1
export AUGUSTUS_CONFIG_PATH=$DIR/augustus/config

[ -z $name ] && exit

cd $DIR/busco
run_BUSCO.py -i $DIR/genomes/$name/filtered.fa \
             -l /work/datasets/igbb/busco/embryophyta_odb9 \
             -m genome \
             -c $PBS_NUM_PPN \
             -o $name \
             -r -t tmp_${lib[0]}

#RENAME augustus model parameters and link it to proper place
pushd run_$name/augustus_output/retraining_parameters
tmp_name=$(basename BUSCO_${name}_*_parameters.cfg _parameters.cfg)
ls -1 ${tmp_name}_* | sed "s/$tmp_name//" | xargs -i mv ${tmp_name}{} BUSCO_${name}{}
sed -i "s/$tmp_name/BUSCO_${name}/" BUSCO_${name}*

ln -s $DIR/busco/run_${name}/augustus_output/retraining_parameters \
   $DIR/augustus/config/species/BUSCO_${name}
popd

pushd run_$name
for dir in blast_output hmmer_output augustus_output single_copy_busco_sequences; do
  tar -czf $dir.tar.gz $dir
done
popd
#+END_SRC

* GeneMark

#+BEGIN_SRC sh :var genomes=genomes[,0]  :tangle genemark/run.sh
export PERL5LIB=$PERL5LIB:/usr/local/igbb/genemark-es-et_4.3.3/lib/perl5/
PATH=$PATH:$DIR/bin/gm_et_linux_64/gmes_petap/

cd $DIR
ROOT=$(git rev-parse --show-toplevel)

[ -z $name ] && exit

mkdir $DIR/genemark/$name 
cd $DIR/genemark/$name

gmes_petap.pl --ES --cores $PBS_NUM_PPN --sequence $DIR/genomes/$name/filtered.fa 
#+END_SRC

* SNAP

#+BEGIN_SRC sh :var genomes=genomes[,0] :tangle snap/train.sh
cd $DIR/snap
ROOT=$(git rev-parse --show-toplevel)

ml igbb
ml snap/2013-11-29 bioperl/1.6

[ -z $name ] && exit


mkdir -p $DIR/snap/tmp_$name/params
pushd $DIR/snap/tmp_$name

cat $DIR/busco/run_$name/augustus_output/gffs/* |
    perl /usr/local/igbb/busco_v2/scripts/gff3_to_zff.pl  > $name.ann

grep '^>' $name.ann | tr -d '>' > $name.seqs2keep
perl /usr/local/igbb/busco_v2/scripts/fasta_sort.pl $name.seqs2keep <  $DIR/genomes/$name/filtered.fa  > $name.dna
fathom $name.ann $name.dna -gene-stats > gene-stats.log 2>&1
fathom $name.ann $name.dna -validate > validate.log 2>&1
fathom $name.ann $name.dna -categorize 1000 > categorize.log 2>&1
fathom uni.ann uni.dna -export 1000 -plus > uni-plus.log 2>&1

pushd params
forge ../export.ann ../export.dna > ../forge.log 2>&1
popd

hmm-assembler.pl $name params/ > $DIR/snap/$name.hmm

popd
#+END_SRC

* MAKER
#+BEGIN_SRC sh :var genomes=genomes[,0] :tangle maker.1/setup.sh
cd $DIR/
ROOT=$(git rev-parse --show-toplevel)

[ -z $name ] && exit

ml igbb
ml maker/2.31.9

AUGUSTUS_CONFIG_PATH=$DIR/augustus/config


declare -A maker_opts
maker_opts["genome"]=$DIR/genomes/$name/filtered.fa
maker_opts["protein"]=/work/datasets/igbb/uniprot_sprot.20181010.fasta  #protein sequence fasta file (i.e. from mutiple oransisms)
maker_opts["protein"]+=",$DIR/ref/G.raimondii_JGI_221_v2.1.proteins.fasta"

maker_opts["model_org"]=""
maker_opts["repeat_protein"]=/usr/local/igbb/maker-2.31.9/data/te_proteins.fasta #transposable element proteins for RepeatRunner
maker_opts["rm_gff"]=$DIR/RM/D5.v1.gff #pre-identified repeat elements from an external GFF3 file
maker_opts["snaphmm"]=$DIR/snap/${name}.hmm #SNAP HMM file
maker_opts["gmhmm"]=$DIR/genemark/${name}/output/gmhmm.mod #GeneMark HMM file
maker_opts["augustus_species"]=BUSCO_$name #Augustus gene prediction species model
maker_opts["pred_gff"]= #ab-initio predictions from an external GFF3 file

maker_opts["alt_splice"]=0 #Take extra steps to try and find alternative splicing, 1 = yes, 0 = no
maker_opts["always_complete"]=0 #extra steps to force start and stop codons, 1 = yes, 0 = no

maker_opts["clean_try"]=1 #remove all data from previous run before retrying, 1 = yes, 0 = no
maker_opts["clean_up"]=1 #removes theVoid directory with individual analysis files, 1 = yes, 0 = no


declare -A maker_exe
maker_exe["probuild"]=$DIR/bin/gm_et_linux_64/gmes_petap/probuild
maker_exe["gmhmme3"]=$DIR/bin/gm_et_linux_64/gmes_petap/gmhmme3

#HACK: Add augustus path to end of augustus_species because maker's augustus run
#      does not respect the AUGUSTUS_CONFIG_PATH env variable
maker_opts["augustus_species"]+=" --AUGUSTUS_CONFIG_PATH=$AUGUSTUS_CONFIG_PATH"

mkdir $DIR/maker.1/${name}
cd $DIR/maker.1/${name}

maker -CTL

for key in "${!maker_opts[@]}"; do
    value=${maker_opts[$key]}
    sed --follow-symlinks -i "s#^\($key *=\).*#\1$value#" maker_opts.ctl
done

for key in "${!maker_exe[@]}"; do
    value=${maker_exe[$key]}
    sed --follow-symlinks -i "s#^\($key *=\).*#\1$value#" maker_exe.ctl
done


#+END_SRC

#+HEADER: :prologue #PBS -N maker -l walltime=48:00:00
#+BEGIN_SRC sh :var genomes=genomes[,0] :tangle maker.1/run.sh
cd $DIR/
ROOT=$(git rev-parse --show-toplevel)

[ -z $name ] && exit

ml igbb
ml maker/2.31.9

cd $DIR/maker.1/$name || exit
mkdir -p $DIR/maker.1/$name/tmp/$PBS_ARRAYID

maker -fix_nucleotides \
      -b $PBS_ARRAYID \
      -g "$DIR/genomes/$name/filtered.split.$PBS_ARRAYID.fa" \
      -c $PBS_NUM_PPN \
      -TMP $DIR/maker.1/$name/tmp/$PBS_ARRAYID/ \
      --ignore_nfs_tmp \
    |& tee ${PBS_ARRAYID}.log

rm -R $DIR/maker/$name/tmp/$PBS_ARRAYID
#+END_SRC

#+BEGIN_SRC perl :shebang "#! /usr/bin/perl" :tangle maker/progress.sh :var genomes=genomes[,0]
use strict;
use warnings;
use Data::Dumper;

local $\ = "\n";
local $, = ",";

# my $genomes = [];
# my $DIR ="";

foreach my $species (@$genomes){
    my $fasta = [];
    my $complete = [];

    my $total_fasta = 0;
    my $total_complete = 0;
    
    for( my $i = 1; $i <= 100; $i++ ){
        open(my $fh, "$DIR/maker/split/$species/$species.filtered.part-" . sprintf( '%03d', $i) . ".fa");
        $total_fasta += ($fasta->[$i] = scalar grep {/>/} <$fh>);
        close $fh;
       
        
        if(-e "$DIR/maker/$species/maker2/$i.maker.output/${i}_master_datastore_index.log"){
          open($fh, "$DIR/maker/$species/maker2/$i.maker.output/${i}_master_datastore_index.log");
          $total_complete += ($complete->[$i] = scalar grep {/FINISHED/} <$fh>);
          close $fh;
        }
    }


    print $species;
    printf("\tTotal: %d of %d [%-100s] %0.2f \n", $total_complete, $total_fasta, '#' x int($total_complete/$total_fasta*100), $total_complete/$total_fasta*100);

    print "\tIncomplete";
    foreach my $i (grep {defined($complete->[$_]) && $complete->[$_] < $fasta->[$_]} (1..100)){
      printf("\t% 5d: % 4d of % 4d [%-100s] %3.0f%%\n", $i, $complete->[$i], $fasta->[$i], '#' x int($complete->[$i]/$fasta->[$i]*100), $complete->[$i]/$fasta->[$i]*100);
    }
    
}

#+END_SRC

#+HEADER: :shebang #!/bin/bash :tangle maker/clean.pbs :mkdirp yes
#+HEADER: :prologue #PBS -N maker -l walltime=48:00:00 -t 1-100
#+BEGIN_SRC sh :var genomes=genomes[,0]
  species=$(sed -n "${species}p" <<< "$genomes")

  cd $DIR/maker/$species || exit
  ROOT=$(git rev-parse --show-toplevel)

  swsetup () { eval `/usr/local/swsetup/swsetup.pl $*`; }
  swsetup maker 
  export PERL5LIB=$PERL5LIB:/usr/local/igbb/maker/lib/perl5/  
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/mpi/x86_64/mpich/lib/

  mkdir $DIR/maker/$species/maker1
  rm $DIR/maker/$species/maker1/master_datastore_index.log
  for i in {1..100}; do
    ln -s $DIR/maker/$species/maker1.$i.maker.output/maker1.${i}_datastore $DIR/maker/$species/maker1/
    cat $DIR/maker/$species/maker1.$i.maker.output/maker1.${i}_master_datastore_index.log >> $DIR/maker/$species/maker1/master_datastore_index.log
  done

  maker2zff -d maker1/master_datastore_index.log
  
#+END_SRC


